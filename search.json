[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "kedro-debug-runner",
    "section": "",
    "text": "This file will become your README and also the index of your documentation."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "kedro-debug-runner",
    "section": "Install",
    "text": "Install\npip install kedro_debug_runner"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "kedro-debug-runner",
    "section": "How to use",
    "text": "How to use\nFill me in please! Donâ€™t forget code examples:\n\n1+1\n\n2"
  },
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "core",
    "section": "",
    "text": "source\n\nDebugRunner\n\n DebugRunner (is_async:bool=False)\n\nSequentialRunner is an AbstractRunner implementation. It can be used to run the Pipeline in a sequential manner using a topological sort of provided nodes.\n\nsource\n\n\nDebugRunner\n\n DebugRunner (is_async:bool=False)\n\nSequentialRunner is an AbstractRunner implementation. It can be used to run the Pipeline in a sequential manner using a topological sort of provided nodes.\n\n# `DebugRunner` has to be used in a different way since `session.run` don't support additional argument, so we are going to use a lower level approach and construct `Runner` and `Pipeline` and `DataCatalog` ourselves.\n\n# Testing Kedro Project: https://github.com/noklam/kedro_gallery/tree/master/kedro-debug-runner-demo\n\nThe kedro.ipython extension is already loaded. To reload it, use:\n  %reload_ext kedro.ipython\n[10/06/22 14:45:20] INFO     Updated path to Kedro project:       __init__.py:54\n                             /Users/Nok_Lam_Chan/dev/kedro_galler               \n                             y/kedro-debug-runner-demo                          \n[10/06/22 14:45:22] INFO     Kedro project                        __init__.py:77\n                             kedro_debug_runner_demo                            \n                    INFO     Defined global variable 'context',   __init__.py:78\n                             'session', 'catalog' and 'pipelines'               \n\n\n\nrunner = DebugRunner()\ndefault_pipeline = pipelines[\"__default__\"]\nrun_1 = runner.run(default_pipeline, catalog)\n\n                    INFO     Updated path to Kedro project:       __init__.py:54\n                             /Users/Nok_Lam_Chan/dev/kedro_galler               \n                             y/kedro-debug-runner-demo                          \n[10/06/22 14:45:24] INFO     Kedro project                        __init__.py:77\n                             kedro_debug_runner_demo                            \n                    INFO     Defined global variable 'context',   __init__.py:78\n                             'session', 'catalog' and 'pipelines'               \n                    INFO     Loading data from               data_catalog.py:343\n                             'example_iris_data'                                \n                             (CSVDataSet)...                                    \n                    INFO     Loading data from 'parameters'  data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: split:                    node.py:327\n                             split_data([example_iris_data,parameter            \n                             s]) -> [X_train,X_test,y_train,y_test]             \n                    INFO     Saving data to 'X_train'        data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'X_test'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'y_train'        data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'y_test'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'X_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'X_test'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: make_predictions:         node.py:327\n                             make_predictions([X_train,X_test,y_trai            \n                             n]) -> [y_pred]                                    \n                    INFO     Saving data to 'y_pred'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_pred'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_test'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: report_accuracy:          node.py:327\n                             report_accuracy([y_pred,y_test]) ->                \n                             None                                               \n                    INFO     Model has accuracy of 0.933 on test     nodes.py:74\n                             data.                                              \n\n\n\nrunner = DebugRunner()\ndefault_pipeline = pipelines[\"__default__\"]\nrun_2 = runner.run(default_pipeline, catalog, dataset_names=[\"example_iris_data\"])\n\n[10/06/22 14:45:27] INFO     Loading data from               data_catalog.py:343\n                             'example_iris_data'                                \n                             (CSVDataSet)...                                    \n                    INFO     Loading data from 'parameters'  data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: split:                    node.py:327\n                             split_data([example_iris_data,parameter            \n                             s]) -> [X_train,X_test,y_train,y_test]             \n                    INFO     Saving data to 'X_train'        data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'X_test'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'y_train'        data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'y_test'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'X_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'X_test'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: make_predictions:         node.py:327\n                             make_predictions([X_train,X_test,y_trai            \n                             n]) -> [y_pred]                                    \n                    INFO     Saving data to 'y_pred'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_pred'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_test'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: report_accuracy:          node.py:327\n                             report_accuracy([y_pred,y_test]) ->                \n                             None                                               \n                    INFO     Model has accuracy of 0.933 on test     nodes.py:74\n                             data.                                              \n                    INFO     Loading data from               data_catalog.py:343\n                             'example_iris_data'                                \n                             (CSVDataSet)...                                    \n\n\n\nrunner = DebugRunner()\ndefault_pipeline = pipelines[\"__default__\"]\nrun_3 = runner.run(default_pipeline, catalog, dataset_names=[\"X_train\"]) # Input datasets\n\n[10/06/22 14:46:01] INFO     Loading data from               data_catalog.py:343\n                             'example_iris_data'                                \n                             (CSVDataSet)...                                    \n                    INFO     Loading data from 'parameters'  data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: split:                    node.py:327\n                             split_data([example_iris_data,parameter            \n                             s]) -> [X_train,X_test,y_train,y_test]             \n                    INFO     Saving data to 'X_train'        data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'X_test'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'y_train'        data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'y_test'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'X_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'X_test'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: make_predictions:         node.py:327\n                             make_predictions([X_train,X_test,y_trai            \n                             n]) -> [y_pred]                                    \n                    INFO     Saving data to 'y_pred'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_pred'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_test'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: report_accuracy:          node.py:327\n                             report_accuracy([y_pred,y_test]) ->                \n                             None                                               \n                    INFO     Model has accuracy of 0.933 on test     nodes.py:74\n                             data.                                              \n                    INFO     Loading data from 'X_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n\n\n\nrun_1\n\n{}\n\n\n\nrun_2\n\n{'example_iris_data':      sepal_length  sepal_width  petal_length  petal_width    species\n 0             5.1          3.5           1.4          0.2     setosa\n 1             4.9          3.0           1.4          0.2     setosa\n 2             4.7          3.2           1.3          0.2     setosa\n 3             4.6          3.1           1.5          0.2     setosa\n 4             5.0          3.6           1.4          0.2     setosa\n ..            ...          ...           ...          ...        ...\n 145           6.7          3.0           5.2          2.3  virginica\n 146           6.3          2.5           5.0          1.9  virginica\n 147           6.5          3.0           5.2          2.0  virginica\n 148           6.2          3.4           5.4          2.3  virginica\n 149           5.9          3.0           5.1          1.8  virginica\n \n [150 rows x 5 columns]}\n\n\n\nrun_3\n\n{'X_train':      sepal_length  sepal_width  petal_length  petal_width\n 47            4.6          3.2           1.4          0.2\n 3             4.6          3.1           1.5          0.2\n 31            5.4          3.4           1.5          0.4\n 25            5.0          3.0           1.6          0.2\n 15            5.7          4.4           1.5          0.4\n ..            ...          ...           ...          ...\n 28            5.2          3.4           1.4          0.2\n 78            6.0          2.9           4.5          1.5\n 146           6.3          2.5           5.0          1.9\n 49            5.0          3.3           1.4          0.2\n 94            5.6          2.7           4.2          1.3\n \n [120 rows x 4 columns]}\n\n\n\nsource\n\n\nGreedySequentialRunner\n\n GreedySequentialRunner (is_async:bool=False)\n\nSequentialRunner is an AbstractRunner implementation. It can be used to run the Pipeline in a sequential manner using a topological sort of provided nodes.\n\nsource\n\n\nGreedySequentialRunner\n\n GreedySequentialRunner (is_async:bool=False)\n\nSequentialRunner is an AbstractRunner implementation. It can be used to run the Pipeline in a sequential manner using a topological sort of provided nodes."
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Nok Blog",
    "section": "",
    "text": "Demo\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\nFill in a module description here\n\n\n\n\n \n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/posts/core.html",
    "href": "blog/posts/core.html",
    "title": "Nokâ€™s experiment with nbdev and DebugRunner",
    "section": "",
    "text": "source\n\nDebugRunner\n\n DebugRunner (is_async:bool=False)\n\nSequentialRunner is an AbstractRunner implementation. It can be used to run the Pipeline in a sequential manner using a topological sort of provided nodes.\n\nsource\n\n\nDebugRunner\n\n DebugRunner (is_async:bool=False)\n\nSequentialRunner is an AbstractRunner implementation. It can be used to run the Pipeline in a sequential manner using a topological sort of provided nodes.\n\n# `DebugRunner` has to be used in a different way since `session.run` don't support additional argument, so we are going to use a lower level approach and construct `Runner` and `Pipeline` and `DataCatalog` ourselves.\n\n# Testing Kedro Project: https://github.com/noklam/kedro_gallery/tree/master/kedro-debug-runner-demo\n\nThe kedro.ipython extension is already loaded. To reload it, use:\n  %reload_ext kedro.ipython\n\n\n[10/06/22 15:32:15] INFO     Updated path to Kedro project:                                          __init__.py:54\n                             /Users/Nok_Lam_Chan/dev/kedro_gallery/kedro-debug-runner-demo                         \n\n\n\n[10/06/22 15:32:17] INFO     Kedro project kedro_debug_runner_demo                                   __init__.py:77\n\n\n\n                    INFO     Defined global variable 'context', 'session', 'catalog' and 'pipelines' __init__.py:78\n\n\n\n\nrunner = DebugRunner()\ndefault_pipeline = pipelines[\"__default__\"]\nrun_1 = runner.run(default_pipeline, catalog)\n\n                    INFO     Updated path to Kedro project:                                          __init__.py:54\n                             /Users/Nok_Lam_Chan/dev/kedro_gallery/kedro-debug-runner-demo                         \n\n\n\n[10/06/22 15:32:19] INFO     Kedro project kedro_debug_runner_demo                                   __init__.py:77\n\n\n\n                    INFO     Defined global variable 'context', 'session', 'catalog' and 'pipelines' __init__.py:78\n\n\n\n                    INFO     Loading data from 'example_iris_data' (CSVDataSet)...              data_catalog.py:343\n\n\n\n                    INFO     Loading data from 'parameters' (MemoryDataSet)...                  data_catalog.py:343\n\n\n\n                    INFO     Running node: split: split_data([example_iris_data,parameters]) ->         node.py:327\n                             [X_train,X_test,y_train,y_test]                                                       \n\n\n\n                    INFO     Saving data to 'X_train' (MemoryDataSet)...                        data_catalog.py:382\n\n\n\n                    INFO     Saving data to 'X_test' (MemoryDataSet)...                         data_catalog.py:382\n\n\n\n                    INFO     Saving data to 'y_train' (MemoryDataSet)...                        data_catalog.py:382\n\n\n\n                    INFO     Saving data to 'y_test' (MemoryDataSet)...                         data_catalog.py:382\n\n\n\n                    INFO     Loading data from 'X_train' (MemoryDataSet)...                     data_catalog.py:343\n\n\n\n                    INFO     Loading data from 'X_test' (MemoryDataSet)...                      data_catalog.py:343\n\n\n\n                    INFO     Loading data from 'y_train' (MemoryDataSet)...                     data_catalog.py:343\n\n\n\n                    INFO     Running node: make_predictions: make_predictions([X_train,X_test,y_train]) node.py:327\n                             -> [y_pred]                                                                           \n\n\n\n                    INFO     Saving data to 'y_pred' (MemoryDataSet)...                         data_catalog.py:382\n\n\n\n                    INFO     Loading data from 'y_pred' (MemoryDataSet)...                      data_catalog.py:343\n\n\n\n                    INFO     Loading data from 'y_test' (MemoryDataSet)...                      data_catalog.py:343\n\n\n\n                    INFO     Running node: report_accuracy: report_accuracy([y_pred,y_test]) -> None    node.py:327\n\n\n\n                    INFO     Model has accuracy of 0.933 on test data.                                  nodes.py:74\n\n\n\n\nrunner = DebugRunner()\ndefault_pipeline = pipelines[\"__default__\"]\nrun_2 = runner.run(default_pipeline, catalog, dataset_names=[\"example_iris_data\"])\n\n                    INFO     Loading data from 'example_iris_data' (CSVDataSet)...              data_catalog.py:343\n\n\n\n                    INFO     Loading data from 'parameters' (MemoryDataSet)...                  data_catalog.py:343\n\n\n\n                    INFO     Running node: split: split_data([example_iris_data,parameters]) ->         node.py:327\n                             [X_train,X_test,y_train,y_test]                                                       \n\n\n\n                    INFO     Saving data to 'X_train' (MemoryDataSet)...                        data_catalog.py:382\n\n\n\n                    INFO     Saving data to 'X_test' (MemoryDataSet)...                         data_catalog.py:382\n\n\n\n                    INFO     Saving data to 'y_train' (MemoryDataSet)...                        data_catalog.py:382\n\n\n\n                    INFO     Saving data to 'y_test' (MemoryDataSet)...                         data_catalog.py:382\n\n\n\n                    INFO     Loading data from 'X_train' (MemoryDataSet)...                     data_catalog.py:343\n\n\n\n                    INFO     Loading data from 'X_test' (MemoryDataSet)...                      data_catalog.py:343\n\n\n\n                    INFO     Loading data from 'y_train' (MemoryDataSet)...                     data_catalog.py:343\n\n\n\n                    INFO     Running node: make_predictions: make_predictions([X_train,X_test,y_train]) node.py:327\n                             -> [y_pred]                                                                           \n\n\n\n                    INFO     Saving data to 'y_pred' (MemoryDataSet)...                         data_catalog.py:382\n\n\n\n                    INFO     Loading data from 'y_pred' (MemoryDataSet)...                      data_catalog.py:343\n\n\n\n                    INFO     Loading data from 'y_test' (MemoryDataSet)...                      data_catalog.py:343\n\n\n\n                    INFO     Running node: report_accuracy: report_accuracy([y_pred,y_test]) -> None    node.py:327\n\n\n\n                    INFO     Model has accuracy of 0.933 on test data.                                  nodes.py:74\n\n\n\n                    INFO     Loading data from 'example_iris_data' (CSVDataSet)...              data_catalog.py:343\n\n\n\n\nrunner = DebugRunner()\ndefault_pipeline = pipelines[\"__default__\"]\nrun_3 = runner.run(default_pipeline, catalog, dataset_names=[\"X_train\"]) # Input datasets\n\n                    INFO     Loading data from 'example_iris_data' (CSVDataSet)...              data_catalog.py:343\n\n\n\n                    INFO     Loading data from 'parameters' (MemoryDataSet)...                  data_catalog.py:343\n\n\n\n                    INFO     Running node: split: split_data([example_iris_data,parameters]) ->         node.py:327\n                             [X_train,X_test,y_train,y_test]                                                       \n\n\n\n                    INFO     Saving data to 'X_train' (MemoryDataSet)...                        data_catalog.py:382\n\n\n\n                    INFO     Saving data to 'X_test' (MemoryDataSet)...                         data_catalog.py:382\n\n\n\n                    INFO     Saving data to 'y_train' (MemoryDataSet)...                        data_catalog.py:382\n\n\n\n                    INFO     Saving data to 'y_test' (MemoryDataSet)...                         data_catalog.py:382\n\n\n\n                    INFO     Loading data from 'X_train' (MemoryDataSet)...                     data_catalog.py:343\n\n\n\n                    INFO     Loading data from 'X_test' (MemoryDataSet)...                      data_catalog.py:343\n\n\n\n                    INFO     Loading data from 'y_train' (MemoryDataSet)...                     data_catalog.py:343\n\n\n\n                    INFO     Running node: make_predictions: make_predictions([X_train,X_test,y_train]) node.py:327\n                             -> [y_pred]                                                                           \n\n\n\n                    INFO     Saving data to 'y_pred' (MemoryDataSet)...                         data_catalog.py:382\n\n\n\n                    INFO     Loading data from 'y_pred' (MemoryDataSet)...                      data_catalog.py:343\n\n\n\n                    INFO     Loading data from 'y_test' (MemoryDataSet)...                      data_catalog.py:343\n\n\n\n                    INFO     Running node: report_accuracy: report_accuracy([y_pred,y_test]) -> None    node.py:327\n\n\n\n                    INFO     Model has accuracy of 0.933 on test data.                                  nodes.py:74\n\n\n\n                    INFO     Loading data from 'X_train' (MemoryDataSet)...                     data_catalog.py:343\n\n\n\n\nrun_1\n\n{}\n\n\n\n\nrun_2\n\n{\n    'example_iris_data':      sepal_length  sepal_width  petal_length  petal_width    species\n0             5.1          3.5           1.4          0.2     setosa\n1             4.9          3.0           1.4          0.2     setosa\n2             4.7          3.2           1.3          0.2     setosa\n3             4.6          3.1           1.5          0.2     setosa\n4             5.0          3.6           1.4          0.2     setosa\n..            ...          ...           ...          ...        ...\n145           6.7          3.0           5.2          2.3  virginica\n146           6.3          2.5           5.0          1.9  virginica\n147           6.5          3.0           5.2          2.0  virginica\n148           6.2          3.4           5.4          2.3  virginica\n149           5.9          3.0           5.1          1.8  virginica\n\n[150 rows x 5 columns]\n}\n\n\n\n\nrun_3\n\n{\n    'X_train':      sepal_length  sepal_width  petal_length  petal_width\n47            4.6          3.2           1.4          0.2\n3             4.6          3.1           1.5          0.2\n31            5.4          3.4           1.5          0.4\n25            5.0          3.0           1.6          0.2\n15            5.7          4.4           1.5          0.4\n..            ...          ...           ...          ...\n28            5.2          3.4           1.4          0.2\n78            6.0          2.9           4.5          1.5\n146           6.3          2.5           5.0          1.9\n49            5.0          3.3           1.4          0.2\n94            5.6          2.7           4.2          1.3\n\n[120 rows x 4 columns]\n}\n\n\n\n\nsource\n\n\nGreedySequentialRunner\n\n GreedySequentialRunner (is_async:bool=False)\n\nSequentialRunner is an AbstractRunner implementation. It can be used to run the Pipeline in a sequential manner using a topological sort of provided nodes.\n\nsource\n\n\nGreedySequentialRunner\n\n GreedySequentialRunner (is_async:bool=False)\n\nSequentialRunner is an AbstractRunner implementation. It can be used to run the Pipeline in a sequential manner using a topological sort of provided nodes."
  },
  {
    "objectID": "blog/posts/core-copy1.html",
    "href": "blog/posts/core-copy1.html",
    "title": "core",
    "section": "",
    "text": "source\n\nDebugRunner\n\n DebugRunner (is_async:bool=False)\n\nSequentialRunner is an AbstractRunner implementation. It can be used to run the Pipeline in a sequential manner using a topological sort of provided nodes.\n\n# `DebugRunner` has to be used in a different way since `session.run` don't support additional argument, so we are going to use a lower level approach and construct `Runner` and `Pipeline` and `DataCatalog` ourselves.\n\n# Testing Kedro Project: https://github.com/noklam/kedro_gallery/tree/master/kedro-debug-runner-demo\n\nThe kedro.ipython extension is already loaded. To reload it, use:\n  %reload_ext kedro.ipython\n[10/06/22 14:45:20] INFO     Updated path to Kedro project:       __init__.py:54\n                             /Users/Nok_Lam_Chan/dev/kedro_galler               \n                             y/kedro-debug-runner-demo                          \n[10/06/22 14:45:22] INFO     Kedro project                        __init__.py:77\n                             kedro_debug_runner_demo                            \n                    INFO     Defined global variable 'context',   __init__.py:78\n                             'session', 'catalog' and 'pipelines'               \n\n\n\nrunner = DebugRunner()\ndefault_pipeline = pipelines[\"__default__\"]\nrun_1 = runner.run(default_pipeline, catalog)\n\n                    INFO     Updated path to Kedro project:       __init__.py:54\n                             /Users/Nok_Lam_Chan/dev/kedro_galler               \n                             y/kedro-debug-runner-demo                          \n[10/06/22 14:45:24] INFO     Kedro project                        __init__.py:77\n                             kedro_debug_runner_demo                            \n                    INFO     Defined global variable 'context',   __init__.py:78\n                             'session', 'catalog' and 'pipelines'               \n                    INFO     Loading data from               data_catalog.py:343\n                             'example_iris_data'                                \n                             (CSVDataSet)...                                    \n                    INFO     Loading data from 'parameters'  data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: split:                    node.py:327\n                             split_data([example_iris_data,parameter            \n                             s]) -> [X_train,X_test,y_train,y_test]             \n                    INFO     Saving data to 'X_train'        data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'X_test'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'y_train'        data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'y_test'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'X_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'X_test'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: make_predictions:         node.py:327\n                             make_predictions([X_train,X_test,y_trai            \n                             n]) -> [y_pred]                                    \n                    INFO     Saving data to 'y_pred'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_pred'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_test'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: report_accuracy:          node.py:327\n                             report_accuracy([y_pred,y_test]) ->                \n                             None                                               \n                    INFO     Model has accuracy of 0.933 on test     nodes.py:74\n                             data.                                              \n\n\n\nrunner = DebugRunner()\ndefault_pipeline = pipelines[\"__default__\"]\nrun_2 = runner.run(default_pipeline, catalog, dataset_names=[\"example_iris_data\"])\n\n[10/06/22 14:45:27] INFO     Loading data from               data_catalog.py:343\n                             'example_iris_data'                                \n                             (CSVDataSet)...                                    \n                    INFO     Loading data from 'parameters'  data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: split:                    node.py:327\n                             split_data([example_iris_data,parameter            \n                             s]) -> [X_train,X_test,y_train,y_test]             \n                    INFO     Saving data to 'X_train'        data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'X_test'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'y_train'        data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'y_test'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'X_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'X_test'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: make_predictions:         node.py:327\n                             make_predictions([X_train,X_test,y_trai            \n                             n]) -> [y_pred]                                    \n                    INFO     Saving data to 'y_pred'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_pred'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_test'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: report_accuracy:          node.py:327\n                             report_accuracy([y_pred,y_test]) ->                \n                             None                                               \n                    INFO     Model has accuracy of 0.933 on test     nodes.py:74\n                             data.                                              \n                    INFO     Loading data from               data_catalog.py:343\n                             'example_iris_data'                                \n                             (CSVDataSet)...                                    \n\n\n\nrunner = DebugRunner()\ndefault_pipeline = pipelines[\"__default__\"]\nrun_3 = runner.run(default_pipeline, catalog, dataset_names=[\"X_train\"]) # Input datasets\n\n[10/06/22 14:46:01] INFO     Loading data from               data_catalog.py:343\n                             'example_iris_data'                                \n                             (CSVDataSet)...                                    \n                    INFO     Loading data from 'parameters'  data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: split:                    node.py:327\n                             split_data([example_iris_data,parameter            \n                             s]) -> [X_train,X_test,y_train,y_test]             \n                    INFO     Saving data to 'X_train'        data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'X_test'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'y_train'        data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Saving data to 'y_test'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'X_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'X_test'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: make_predictions:         node.py:327\n                             make_predictions([X_train,X_test,y_trai            \n                             n]) -> [y_pred]                                    \n                    INFO     Saving data to 'y_pred'         data_catalog.py:382\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_pred'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Loading data from 'y_test'      data_catalog.py:343\n                             (MemoryDataSet)...                                 \n                    INFO     Running node: report_accuracy:          node.py:327\n                             report_accuracy([y_pred,y_test]) ->                \n                             None                                               \n                    INFO     Model has accuracy of 0.933 on test     nodes.py:74\n                             data.                                              \n                    INFO     Loading data from 'X_train'     data_catalog.py:343\n                             (MemoryDataSet)...                                 \n\n\n\nrun_1\n\n{}\n\n\n\nrun_2\n\n{'example_iris_data':      sepal_length  sepal_width  petal_length  petal_width    species\n 0             5.1          3.5           1.4          0.2     setosa\n 1             4.9          3.0           1.4          0.2     setosa\n 2             4.7          3.2           1.3          0.2     setosa\n 3             4.6          3.1           1.5          0.2     setosa\n 4             5.0          3.6           1.4          0.2     setosa\n ..            ...          ...           ...          ...        ...\n 145           6.7          3.0           5.2          2.3  virginica\n 146           6.3          2.5           5.0          1.9  virginica\n 147           6.5          3.0           5.2          2.0  virginica\n 148           6.2          3.4           5.4          2.3  virginica\n 149           5.9          3.0           5.1          1.8  virginica\n \n [150 rows x 5 columns]}\n\n\n\nrun_3\n\n{'X_train':      sepal_length  sepal_width  petal_length  petal_width\n 47            4.6          3.2           1.4          0.2\n 3             4.6          3.1           1.5          0.2\n 31            5.4          3.4           1.5          0.4\n 25            5.0          3.0           1.6          0.2\n 15            5.7          4.4           1.5          0.4\n ..            ...          ...           ...          ...\n 28            5.2          3.4           1.4          0.2\n 78            6.0          2.9           4.5          1.5\n 146           6.3          2.5           5.0          1.9\n 49            5.0          3.3           1.4          0.2\n 94            5.6          2.7           4.2          1.3\n \n [120 rows x 4 columns]}\n\n\n\nsource\n\n\nGreedySequentialRunner\n\n GreedySequentialRunner (is_async:bool=False)\n\nSequentialRunner is an AbstractRunner implementation. It can be used to run the Pipeline in a sequential manner using a topological sort of provided nodes."
  }
]